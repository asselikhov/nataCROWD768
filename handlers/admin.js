const Visit = require('../models/Visit');

function adminHandler(bot) {
  bot.command('admin', async (ctx) => {
    if (ctx.from.id !== Number(process.env.ADMIN_ID)) {
      return ctx.reply('–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    }

    try {
      const totalVisits = await Visit.countDocuments();
      const uniqueVisitors = await Visit.distinct('userId').then(users => users.length);
      const todayVisits = await Visit.countDocuments({
        timestamp: { $gte: new Date(new Date().setHours(0, 0, 0, 0)) }
      });

      ctx.reply(
          `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n` +
          `üë• –í—Å–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏–π: ${totalVisits}\n` +
          `üë§ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π: ${uniqueVisitors}\n` +
          `üìÖ –ü–æ—Å–µ—â–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è: ${todayVisits}\n\n` +
          `‚úèÔ∏è –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: /edit [section] [text]`
      );
    } catch (err) {
      console.error('Error fetching stats:', err);
      ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    }
  });
}

module.exports = { adminHandler };