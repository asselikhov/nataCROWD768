const { Markup } = require('telegraf');

const products = [
    { id: 1, name: '–ü—Ä–æ–¥—É–∫—Ç 1', clientPrice: 1000, clubPrice: 800, imageUrl: 'https://picsum.photos/200/300?random=1' },
    { id: 2, name: '–ü—Ä–æ–¥—É–∫—Ç 2', clientPrice: 1500, clubPrice: 1200, imageUrl: 'https://picsum.photos/200/300?random=2' },
];

function showcaseHandler(bot) {
    bot.action('showcase', (ctx) => {
        try {
            ctx.reply(
                'üõç –ù–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—è:',
                Markup.inlineKeyboard(
                    products.map(product => [
                        Markup.button.callback(
                            `${product.name} (üí∞ ${product.clientPrice}‚ÇΩ | üèÜ ${product.clubPrice}‚ÇΩ)`,
                            `product_${product.id}`
                        )
                    ])
                )
            );
            ctx.answerCbQuery();
        } catch (err) {
            console.error('Error in showcase action:', err);
            ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–¥—É–∫—Ü–∏–∏');
        }
    });

    bot.action(/product_(.+)/, (ctx) => {
        const productId = ctx.match[1];
        const product = products.find(p => p.id === Number(productId));

        try {
            ctx.replyWithPhoto(
                { url: product.imageUrl },
                {
                    caption: `‚ú® ${product.name}\nüí∞ –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è —Ü–µ–Ω–∞: ${product.clientPrice}‚ÇΩ\nüèÜ –ö–ª—É–±–Ω–∞—è —Ü–µ–Ω–∞: ${product.clubPrice}‚ÇΩ`,
                    reply_markup: Markup.inlineKeyboard([
                        [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤–∏—Ç—Ä–∏–Ω–µ', 'showcase')]
                    ])
                }
            );
            ctx.answerCbQuery();
        } catch (err) {
            console.error('Error in product action:', err);
            ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–¥—É–∫—Ç–∞');
        }
    });
}

module.exports = { showcaseHandler };